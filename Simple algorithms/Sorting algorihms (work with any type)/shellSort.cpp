// 8. Реализовать сортировку Шелла.
//Для сравнения использовать переданную пользователем функцию сравнения.

bool comparator(int x, int y) //функция сравнения (компаратор). Если левый аргумент меньше правого - возвращает true, иначе false
{
	if (x < y) return true;
	else return false;
}
void shellSort(int*a, int length)
{
	int g = 0; // g - gap (промежуток)
	for (g = 1; g <= length / 9; g = g * 3 + 1); //находим первый шаг (делим на 9, чтобы он пробегал хотя бы три раза) (Последовательность Кнута)
	for (; g > 0; g = g / 3){ //счетчик последовательности прирощений (начинаем с большего g)
		for (int i = g; i < length; i++){
			int tmp = a[i]; //запоминаем i-ый элемент (освобождаем i-ое место)
			int j = i;
			for (; j >= g && comparator(tmp,a[j - g]); j = j - g){ //ищем место для нашего a[i]
				a[j] = a[j - g];
			}
			a[j] = tmp; //вставляем обратно наш a[i]
		}
	}
}

void main()
{
	int a[] = { -2, 2, 4, 2, 3, 13, 21, 8, 17, 5, 0, 11 };
	int length = 12;
	shellSort(a, length);
}